{"version":3,"sources":["componenets/test1.js","componenets/test2.js","App.js","reportWebVitals.js","index.js"],"names":["Test1","props","history","useHistory","color","userName","data","useParams","console","log","name","URLSearchParams","useLocation","search","get","style","onClick","push","Test2","IncrementCount","setState","prevState","count","state","this","display","marginRight","Component","App","to","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAwBeA,EArBD,SAACC,GACX,IAAIC,EAAQC,cAKZ,IAAOC,EAAkBH,EAAlBG,MAAMC,EAAYJ,EAAZI,SACPC,EAAKC,cAGX,OAFAC,QAAQC,IAAIH,EAAKI,MACjBF,QAAQC,IAAK,IAAIE,gBAAgBC,cAAcC,QAASC,IAAI,SAGxD,gCACI,qBAAIC,MAAO,CAACX,MAAMA,GAAlB,mBAAiCC,KACjC,wBAAQW,QAZhB,WAEId,EAAQe,KAAK,WAUT,+BCgBGC,E,kDA3BX,aAAe,IAAD,8BACV,gBAMJC,eAAiB,WACb,EAAKC,UACD,SAACC,GAAD,MAAgB,CAAEC,MAAOD,EAAUC,MAAQ,OAP/C,EAAKC,MAAQ,CACTD,MAAO,GAHD,E,0CAad,WAEI,MAA4BE,KAAKvB,MAAzBG,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACf,OACI,gCACI,qBAAIU,MAAO,CAAEX,MAAOA,GAApB,mBAAoCC,KACpC,uBACA,qBAAIU,MAAO,CAAEU,QAAS,eAAeC,YAAY,OAAjD,qBAAoEF,KAAKD,MAAMD,SAC/E,wBAAQP,MAAO,CAAEU,QAAS,gBAAkBT,QAASQ,KAAKL,eAA1D,sB,GAtBIQ,aC8BLC,E,4JAxBb,WACE,OACE,cAAC,IAAD,UACE,gCACE,+BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,sDAAT,sBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,qDAAT,yBAIJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,2DAA2DC,UAAW/B,IAClF,cAAC,IAAD,CAAO8B,KAAK,qDAAqDC,UAAW/B,IAC5E,cAAC,IAAD,CAAO8B,KAAK,qDAAqDC,UAAWb,gB,GAjBtES,aCEHK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4a8bbca1.chunk.js","sourcesContent":["import React from 'react';\r\nimport {useHistory,useLocation,useParams} from 'react-router-dom'\r\n\r\nconst Test1 = (props)=>{\r\n    let history=useHistory();\r\n    function RedirectToTest1()\r\n    {   \r\n        history.push(\"/test2\");\r\n    }\r\n    const {color,userName} = props;\r\n    const data=useParams();\r\n    console.log(data.name);\r\n    console.log((new URLSearchParams(useLocation().search)).get(\"name\"));\r\n    return (\r\n        \r\n        <div>\r\n            <h1 style={{color:color}}>Hello {userName}</h1>\r\n            <button onClick={RedirectToTest1}>Back To Test2</button>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Test1;","import React, { Component } from 'react';\r\n\r\n\r\n\r\n\r\nclass Test2 extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            count: 0\r\n        }\r\n        \r\n    }\r\n    IncrementCount = () => {\r\n        this.setState(\r\n            (prevState) => ({ count: prevState.count + 1 })\r\n        );\r\n    }\r\n    \r\n    render() {\r\n        \r\n        const { color, userName } = this.props;\r\n        return (\r\n            <div>\r\n                <h1 style={{ color: color }}>Hello {userName}</h1>\r\n                <hr />\r\n                <h2 style={{ display: 'inline-block',marginRight:\"2px\" }} >Count - {this.state.count}</h2>\r\n                <button style={{ display: 'inline-block' }} onClick={this.IncrementCount}>+</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test2;","import './App.css';\nimport React, { Component } from 'react'\nimport { BrowserRouter, Link, Route, Switch } from 'react-router-dom'\nimport Test1 from './componenets/test1'\nimport Test2 from './componenets/test2'\n/**\n * \n * @returns Greeting HTML\n * @summary StateLess Functional Component\n */\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <ul>\n            <li>\n              <Link to=\"/jyothathi.github.io/Web.github.io/ReactDemo/test1/\">Test-1</Link>\n            </li>\n            <li>\n              <Link to=\"/jyothathi.github.io/Web.github.io/ReactDemo/test2\">Test-2</Link>\n            </li>\n          </ul>\n          \n          <Switch>\n            <Route path=\"/jyothathi.github.io/Web.github.io/ReactDemo/test1/:name\" component={Test1} />\n            <Route path=\"/jyothathi.github.io/Web.github.io/ReactDemo/test1\" component={Test1} />\n            <Route path=\"/jyothathi.github.io/Web.github.io/ReactDemo/test2\" component={Test2} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    \n    <App />\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}